# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [ubuntu-latest]
    env:
      GOOS: windows
      GOARCH: amd64

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Setup
      uses: actions/setup-go@v2-beta
      with:
        go-version: '^1.13.1' # The Go version to download (if necessary) and use.
    - name: Prepare
      run: |
        mkdir -p out
        mkdir -p tmp/bin
        go get
        GOPATH=$PWD/tmp go get github.com/akavel/rsrc
        ./tmp/bin/rsrc -manifest ms-tools.exe.manifest -o rsrc.syso
    - name: Build
      run: |
       go build -o=out/ms-tools.exe -ldflags="-H windowsgui" .
       zip release.zip ./out
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: release-v0.0.${{ github.run_number }}
        # Directory containing files to upload
        path: ./out
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v0.0.${{ github.run_number }}
        release_name: Release v0.0.${{ github.run_number }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./release.zip
        asset_name: release-v0.0.${{ github.run_number }}.zip
        asset_content_type: application/zip
